[{"/Users/ys/Documents/grid-trading/src/index.js":"1","/Users/ys/Documents/grid-trading/src/reportWebVitals.js":"2","/Users/ys/Documents/grid-trading/src/App.js":"3","/Users/ys/Documents/grid-trading/src/connect.js":"4","/Users/ys/Documents/grid-trading/src/Box.js":"5","/Users/ys/Documents/grid-trading/src/Button.js":"6","/Users/ys/Documents/grid-trading/src/LimitForm.js":"7","/Users/ys/Documents/grid-trading/src/ChartBox.js":"8","/Users/ys/Documents/grid-trading/src/api.js":"9","/Users/ys/Documents/grid-trading/src/ResultPage.js":"10","/Users/ys/Documents/grid-trading/src/WaitBuyBox.js":"11","/Users/ys/Documents/grid-trading/src/WaitSellBox.js":"12","/Users/ys/Documents/grid-trading/src/DoneBox.js":"13"},{"size":642,"mtime":1656000022758,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1653618380654,"results":"16","hashOfConfig":"15"},{"size":704,"mtime":1656094425259,"results":"17","hashOfConfig":"15"},{"size":3004,"mtime":1656006000106,"results":"18","hashOfConfig":"15"},{"size":716,"mtime":1656055176016,"results":"19","hashOfConfig":"15"},{"size":251,"mtime":1655869984542,"results":"20","hashOfConfig":"15"},{"size":4419,"mtime":1656058485289,"results":"21","hashOfConfig":"15"},{"size":2481,"mtime":1656094694850,"results":"22","hashOfConfig":"15"},{"size":2249,"mtime":1656104429208,"results":"23","hashOfConfig":"15"},{"size":520,"mtime":1656089754583,"results":"24","hashOfConfig":"15"},{"size":2970,"mtime":1656104406591,"results":"25","hashOfConfig":"15"},{"size":2087,"mtime":1656104162028,"results":"26","hashOfConfig":"15"},{"size":2079,"mtime":1656104135075,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},"1oufsji",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ys/Documents/grid-trading/src/index.js",["72"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport CreatSocketConnection from \"./connect\";\nimport App from \"./App\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport ResultPage from \"./ResultPage\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}></Route>\n        <Route path=\"results\" element={<ResultPage />} />\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>\n);\nreportWebVitals();\n",[],"/Users/ys/Documents/grid-trading/src/reportWebVitals.js",[],[],"/Users/ys/Documents/grid-trading/src/App.js",[],[],"/Users/ys/Documents/grid-trading/src/connect.js",["73","74","75","76","77"],[],"import { useState } from \"react\";\n\n// let socket; // 소켓\n\n// 웹소켓 연결\nfunction CreatSocketConnection(type, conncectType, dataMaker) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const ERROR = `${type}_ERROR`;\n  let payload = 0;\n  const [data, setData] = useState(\"\");\n  let socket = new WebSocket(\"wss://api.upbit.com/websocket/v1\");\n  socket.binaryType = \"arraybuffer\";\n\n  socket.onopen = () => {\n    //console.log(\"?\");\n    socket.send(\n      JSON.stringify([\n        { ticket: \"UNIQUE_TICKET\" },\n        { type: \"ticker\", codes: [\"KRW-BTC\"] }, // \"KRW-BTC\",\"KRW-ETH\" -> parsing\n        { type: \"orderbook\", codes: [\"KRW-BTC\"] },\n        { type: \"trade\", codes: [\"KRW-BTC\"] },\n      ])\n    );\n  };\n\n  socket.onmessage = (e) => {\n    //console.log(\"message\");\n    var enc = new TextDecoder(\"utf-8\");\n    var arr = new Uint8Array(e.data);\n    var str_d = enc.decode(arr);\n    var d = JSON.parse(str_d);\n    if (d.type === \"ticker\") {\n      // 현재가 데이터\n      setData(d.trade_price);\n      // TOD\n      //console.log(d.opening_price);\n      // payload = d.opening_price;\n    }\n    if (d.type == \"orderbook\") {\n      // 호가 데이터\n      // TODO\n    }\n    if (d.type == \"trade\") {\n      // 체결 데이터\n      // TODO\n    }\n  };\n  socket.onerror = (e) => {\n    console.log(e);\n  };\n  return (\n    <div>\n      <h1>{data}</h1>\n    </div>\n  );\n}\n\n//   return () => (dispatch, getState) => {\n//     let socket = new WebSocket(\"wss://api.upbit.com/websocket/v1\");\n//     socket.binaryType = \"arraybuffer\";\n\n//     //socket = new WebSocket(\"wss://api.upbit.com/websocket/v1\");\n//     //socket.binaryType = \"arraybuffer\";\n\n//     socket.onopen = () => {\n//       console.log(\"?\");\n//       socket.send(\n//         JSON.stringify([\n//           { ticket: \"UNIQUE_TICKET\" },\n//           { type: \"ticker\", codes: [\"KRW-BTC\"] }, // \"KRW-BTC\",\"KRW-ETH\" -> parsing\n//           { type: \"orderbook\", codes: [\"KRW-BTC\"] },\n//           { type: \"trade\", codes: [\"KRW-BTC\"] },\n//         ])\n//       );\n//     };\n\n//     socket.onclose = function (e) {\n//       socket = undefined;\n//     };\n\n//     socket.onmessage = (e) => {\n//       console.log(\"?\");\n//       var enc = new TextDecoder(\"utf-8\");\n//       var arr = new Uint8Array(e.data);\n//       var str_d = enc.decode(arr);\n//       var d = JSON.parse(str_d);\n//       const state = getState();\n//       if (d.type == \"ticker\") {\n//         dispatch({ type: SUCCESS, payload: state });\n//         // 현재가 데이터\n//         // TOD\n//         console.log(\"yay\");\n//       }\n//       if (d.type == \"orderbook\") {\n//         // 호가 데이터\n//         // TODO\n//       }\n//       if (d.type == \"trade\") {\n//         // 체결 데이터\n//         // TODO\n//       }\n//     };\n//     socket.onerror = (e) => {\n//       dispatch({ type: ERROR, payload: e });\n//     };\n//   };\n\n// function closeWS() {\n//   if (socket != undefined) {\n//     socket.close();\n//     socket = undefined;\n//   }\n// }\n\nexport default CreatSocketConnection;\n","/Users/ys/Documents/grid-trading/src/Box.js",["78","79","80"],[],"import \"./Box.css\";\nimport Button from \"./Button\";\nimport LimitForm from \"./LimitForm\";\nimport { test } from \"./api\";\nimport { useState } from \"react\";\n\nfunction Box() {\n  const startTrade = () => {};\n  const [items, setItems] = useState([]);\n  const handleCreateSuccess = (newItem) => {\n    setItems((prevItems) => [newItem, ...prevItems]);\n  };\n  return (\n    <div className=\"Box\">\n      <h1 className=\"Box-heading\">Arithmetic</h1>\n      <div className=\"Content App-box\">\n        <div className=\"Content-inner\">\n          <div className=\"LimitForm\">\n            <LimitForm onSubmit={test} onSubmitSuccess={handleCreateSuccess} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Box;\n","/Users/ys/Documents/grid-trading/src/Button.js",[],[],"/Users/ys/Documents/grid-trading/src/LimitForm.js",[],[],"/Users/ys/Documents/grid-trading/src/ChartBox.js",["81","82","83","84","85","86"],[],"/Users/ys/Documents/grid-trading/src/api.js",["87","88","89"],[],"import { useEffect, useRef, useState } from \"react\";\n\nexport async function test(formData) {\n  const options = { method: \"GET\", headers: { Accept: \"application/json\" } };\n  console.log(\"api뭐야\");\n  let body;\n  const response = await fetch(\n    \"https://api.upbit.com/v1/candles/minutes/1?market=KRW-BTC&count=1\",\n    options\n  )\n    .then((response) => response.json())\n    .catch((err) => console.error(err));\n\n  // console.log(body);\n  // const body = await response.json();\n  return body;\n}\n\nexport async function startTrading(formData) {\n  // const options = {\n  //   method: \"POST\",\n  //   headers: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\n  //   body: JSON.stringify({\n  //     market: \"KRW-BTC\",\n  //     side: \"ask\",\n  //     volume: \"0.00072585\",\n  //     price: \"30000000\",\n  //     ord_type: \"limit\",\n  //   }),\n  // };\n\n  // fetch(\"https://api.upbit.com/v1/orders\", options)\n  //   .then((response) => response.json())\n  //   .then((response) => console.log(response))\n  //   .catch((err) => console.error(err));\n\n  const BASE_URL = \"https://learn.codeit.kr/api/foods\";\n  const response = await fetch(`${BASE_URL}`, {\n    method: \"POST\",\n    body: formData,\n  })\n    .then((response) => response.json())\n    .then((response) => console.log(response))\n    .catch((err) => console.error(err));\n  if (!response.ok) {\n    throw new Error(\"데이터를 생성하는데 실패했습니다\");\n  }\n  const body = await response.json();\n  console.log(body);\n  return body;\n}\n\nexport async function ChartDraw() {\n  const options = { method: \"GET\", headers: { Accept: \"application/json\" } };\n\n  fetch(\n    \"https://api.upbit.com/v1/candles/minutes/1?market=KRW-BTC&count=1\",\n    options\n  )\n    .then((response) => response.json())\n    .then((response) => console.log(response))\n    .catch((err) => console.error(err));\n}\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef(null);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    const executeCallback = () => {\n      savedCallback.current();\n    };\n\n    const timerId = setInterval(executeCallback, delay);\n\n    return () => clearInterval(timerId);\n  }, []);\n};\n\nexport default useInterval;\n","/Users/ys/Documents/grid-trading/src/ResultPage.js",[],[],"/Users/ys/Documents/grid-trading/src/WaitBuyBox.js",["90","91","92","93","94","95","96"],[],"/Users/ys/Documents/grid-trading/src/WaitSellBox.js",["97","98","99","100"],[],"/Users/ys/Documents/grid-trading/src/DoneBox.js",["101","102","103","104"],[],{"ruleId":"105","severity":1,"message":"106","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":29},{"ruleId":"105","severity":1,"message":"109","line":7,"column":9,"nodeType":"107","messageId":"108","endLine":7,"endColumn":16},{"ruleId":"105","severity":1,"message":"110","line":8,"column":9,"nodeType":"107","messageId":"108","endLine":8,"endColumn":14},{"ruleId":"105","severity":1,"message":"111","line":9,"column":7,"nodeType":"107","messageId":"108","endLine":9,"endColumn":14},{"ruleId":"112","severity":1,"message":"113","line":39,"column":16,"nodeType":"114","messageId":"115","endLine":39,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":43,"column":16,"nodeType":"114","messageId":"115","endLine":43,"endColumn":18},{"ruleId":"105","severity":1,"message":"116","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"117","line":8,"column":9,"nodeType":"107","messageId":"108","endLine":8,"endColumn":19},{"ruleId":"105","severity":1,"message":"118","line":9,"column":10,"nodeType":"107","messageId":"108","endLine":9,"endColumn":15},{"ruleId":"105","severity":1,"message":"119","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":18},{"ruleId":"105","severity":1,"message":"120","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":17},{"ruleId":"105","severity":1,"message":"121","line":26,"column":10,"nodeType":"107","messageId":"108","endLine":26,"endColumn":19},{"ruleId":"105","severity":1,"message":"122","line":26,"column":21,"nodeType":"107","messageId":"108","endLine":26,"endColumn":33},{"ruleId":"105","severity":1,"message":"123","line":27,"column":24,"nodeType":"107","messageId":"108","endLine":27,"endColumn":39},{"ruleId":"124","severity":1,"message":"125","line":56,"column":6,"nodeType":"126","endLine":56,"endColumn":8,"suggestions":"127"},{"ruleId":"105","severity":1,"message":"128","line":1,"column":29,"nodeType":"107","messageId":"108","endLine":1,"endColumn":37},{"ruleId":"105","severity":1,"message":"129","line":7,"column":9,"nodeType":"107","messageId":"108","endLine":7,"endColumn":17},{"ruleId":"124","severity":1,"message":"130","line":80,"column":6,"nodeType":"126","endLine":80,"endColumn":8,"suggestions":"131"},{"ruleId":"105","severity":1,"message":"132","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":18},{"ruleId":"124","severity":1,"message":"133","line":50,"column":45,"nodeType":"126","endLine":50,"endColumn":47,"suggestions":"134"},{"ruleId":"105","severity":1,"message":"135","line":51,"column":16,"nodeType":"107","messageId":"108","endLine":51,"endColumn":23},{"ruleId":"124","severity":1,"message":"136","line":52,"column":40,"nodeType":"126","endLine":52,"endColumn":42,"suggestions":"137"},{"ruleId":"105","severity":1,"message":"138","line":54,"column":10,"nodeType":"107","messageId":"108","endLine":54,"endColumn":14},{"ruleId":"105","severity":1,"message":"139","line":54,"column":16,"nodeType":"107","messageId":"108","endLine":54,"endColumn":23},{"ruleId":"124","severity":1,"message":"125","line":75,"column":6,"nodeType":"126","endLine":75,"endColumn":8,"suggestions":"140"},{"ruleId":"105","severity":1,"message":"141","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":19},{"ruleId":"105","severity":1,"message":"142","line":2,"column":21,"nodeType":"107","messageId":"108","endLine":2,"endColumn":28},{"ruleId":"105","severity":1,"message":"143","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":18},{"ruleId":"105","severity":1,"message":"132","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":18},{"ruleId":"105","severity":1,"message":"141","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":19},{"ruleId":"105","severity":1,"message":"142","line":2,"column":21,"nodeType":"107","messageId":"108","endLine":2,"endColumn":28},{"ruleId":"105","severity":1,"message":"143","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":18},{"ruleId":"105","severity":1,"message":"132","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":18},"no-unused-vars","'CreatSocketConnection' is defined but never used.","Identifier","unusedVar","'SUCCESS' is assigned a value but never used.","'ERROR' is assigned a value but never used.","'payload' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'startTrade' is assigned a value but never used.","'items' is assigned a value but never used.","'ApexCharts' is defined but never used.","'ChartDraw' is defined but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'setLoadingError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'asyncTest'. Either include it or remove the dependency array.","ArrayExpression",["144"],"'useState' is defined but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'delay'. Either include it or remove the dependency array.",["145"],"'reactTable' is defined but never used.","React Hook useMemo has a missing dependency: 'columnData'. Either include it or remove the dependency array.",["146"],"'setData' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'data'. Either include it or remove the dependency array.",["147"],"'info' is assigned a value but never used.","'setInfo' is assigned a value but never used.",["148"],"'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useTable' is defined but never used.",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"149","fix":"157"},"Update the dependencies array to be: [asyncTest]",{"range":"158","text":"159"},"Update the dependencies array to be: [delay]",{"range":"160","text":"161"},"Update the dependencies array to be: [columnData]",{"range":"162","text":"163"},"Update the dependencies array to be: [data]",{"range":"164","text":"165"},{"range":"166","text":"159"},[1477,1479],"[asyncTest]",[2178,2180],"[delay]",[908,910],"[columnData]",[1003,1005],"[data]",[1648,1650]]