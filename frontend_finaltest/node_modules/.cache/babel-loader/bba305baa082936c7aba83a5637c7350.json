{"ast":null,"code":"var _jsxFileName = \"/Users/ys/Documents/grid-trading/src/WaitBuyBox.js\",\n    _s = $RefreshSig$();\n\nimport { useMemo, useState } from \"react\";\nimport { useTable } from \"react-table/dist/react-table.development\";\nimport \"./ResultBoxes.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_VALUES = [{\n  random0: {\n    timeStamp: \"2018-04-17T19:16:00\",\n    volume: 10,\n    price: 20\n  },\n  random1: {\n    timeStamp: \"2018-04-18T19:16:00\",\n    volume: 90,\n    price: 100\n  }\n}];\nconst columnData = [{\n  accessor: \"timestamp\",\n  Header: \"timestamp\"\n}, {\n  accessor: \"volume\",\n  Header: \"volume\"\n}, {\n  accessor: \"price\",\n  Header: \"price\"\n}];\n\nfunction WaitBuyBox() {\n  _s();\n\n  let initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_VALUES;\n  const [data, setData] = useState([{\n    initialValues\n  }]);\n  const dataTest = useMemo(() => data, []);\n  const [info, setInfo] = useState();\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({}); // const getWaitBuy = () => {\n  //   dataTest.getWaitBuy().then(item => setInfo(item))\n  // }\n  // const dataTest = useMemo(() => info, [info])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ResultBox\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"ResultBox-heading\",\n      children: \"\\uBBF8\\uCCB4\\uACB0(Buy)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WaitBuyBox, \"E+SC6bCMbYPwBJ/HLFjXD+xb6mk=\", false, function () {\n  return [useTable];\n});\n\n_c = WaitBuyBox;\nexport default WaitBuyBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"WaitBuyBox\");","map":{"version":3,"names":["useMemo","useState","useTable","INITIAL_VALUES","random0","timeStamp","volume","price","random1","columnData","accessor","Header","WaitBuyBox","initialValues","data","setData","dataTest","info","setInfo","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow"],"sources":["/Users/ys/Documents/grid-trading/src/WaitBuyBox.js"],"sourcesContent":["import { useMemo, useState } from \"react\";\nimport { useTable } from \"react-table/dist/react-table.development\";\nimport \"./ResultBoxes.css\";\n\nconst INITIAL_VALUES = [\n  {\n    random0: {\n      timeStamp: \"2018-04-17T19:16:00\",\n      volume: 10,\n      price: 20,\n    },\n    random1: {\n      timeStamp: \"2018-04-18T19:16:00\",\n      volume: 90,\n      price: 100,\n    },\n  },\n];\n\nconst columnData = [\n  {\n    accessor: \"timestamp\",\n    Header: \"timestamp\",\n  },\n  {\n    accessor: \"volume\",\n    Header: \"volume\",\n  },\n  {\n    accessor: \"price\",\n    Header: \"price\",\n  },\n];\nfunction WaitBuyBox(initialValues = INITIAL_VALUES) {\n  const [data, setData] = useState([{ initialValues }]);\n  const dataTest = useMemo(() => data, []);\n\n  const [info, setInfo] = useState();\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({});\n\n  // const getWaitBuy = () => {\n  //   dataTest.getWaitBuy().then(item => setInfo(item))\n  // }\n  // const dataTest = useMemo(() => info, [info])\n  return (\n    <div className=\"ResultBox\">\n      <h1 className=\"ResultBox-heading\">미체결(Buy)</h1>\n    </div>\n  );\n}\n\nexport default WaitBuyBox;\n"],"mappings":";;;AAAA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,0CAAzB;AACA,OAAO,mBAAP;;AAEA,MAAMC,cAAc,GAAG,CACrB;EACEC,OAAO,EAAE;IACPC,SAAS,EAAE,qBADJ;IAEPC,MAAM,EAAE,EAFD;IAGPC,KAAK,EAAE;EAHA,CADX;EAMEC,OAAO,EAAE;IACPH,SAAS,EAAE,qBADJ;IAEPC,MAAM,EAAE,EAFD;IAGPC,KAAK,EAAE;EAHA;AANX,CADqB,CAAvB;AAeA,MAAME,UAAU,GAAG,CACjB;EACEC,QAAQ,EAAE,WADZ;EAEEC,MAAM,EAAE;AAFV,CADiB,EAKjB;EACED,QAAQ,EAAE,QADZ;EAEEC,MAAM,EAAE;AAFV,CALiB,EASjB;EACED,QAAQ,EAAE,OADZ;EAEEC,MAAM,EAAE;AAFV,CATiB,CAAnB;;AAcA,SAASC,UAAT,GAAoD;EAAA;;EAAA,IAAhCC,aAAgC,uEAAhBV,cAAgB;EAClD,MAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,CAAC;IAAEY;EAAF,CAAD,CAAD,CAAhC;EACA,MAAMG,QAAQ,GAAGhB,OAAO,CAAC,MAAMc,IAAP,EAAa,EAAb,CAAxB;EAEA,MAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,EAAhC;EACA,MAAM;IAAEkB,aAAF;IAAiBC,iBAAjB;IAAoCC,YAApC;IAAkDC,IAAlD;IAAwDC;EAAxD,IACJrB,QAAQ,CAAC,EAAD,CADV,CALkD,CAQlD;EACA;EACA;EACA;;EACA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,uBACE;MAAI,SAAS,EAAC,mBAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAjBQU,U;UAMLV,Q;;;KANKU,U;AAmBT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}