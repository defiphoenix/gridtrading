{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nexport async function test(formData) {\n  const options = {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\"\n    }\n  };\n  console.log(\"api뭐야\");\n  let body;\n  const response = await fetch(\"https://api.upbit.com/v1/candles/minutes/1?market=KRW-BTC&count=1\", options).then(response => response.json()).catch(err => console.error(err)); // console.log(body);\n  // const body = await response.json();\n\n  return body;\n}\nexport async function startTrading(formData) {\n  console.log(\"테스트트레이딩\"); // const BASE_URL = \"\";\n\n  const request = require(\"request\");\n\n  const uuidv4 = require(\"uuid/v4\");\n\n  const crypto = require(\"crypto\");\n\n  const sign = require(\"jsonwebtoken\").sign;\n\n  const queryEncode = require(\"querystring\").encode;\n\n  const access_key = formData.access_key;\n  const secret_key = formData.secret_key;\n  const server_url = \"https://api.upbit.com/v1/orders\";\n  const body = {\n    market: \"KRW-BTC\",\n    side: \"ask\",\n    volume: \"0.00072585\",\n    //price: '',\n    ord_type: \"market\"\n  };\n  const query = queryEncode(formData);\n  const hash = crypto.createHash(\"sha512\");\n  const queryHash = hash.update(query, \"utf-8\").digest(\"hex\");\n  const payload = {\n    access_key: access_key,\n    nonce: uuidv4(),\n    query_hash: queryHash,\n    query_hash_alg: \"SHA512\"\n  };\n  const token = sign(payload, secret_key);\n  const options = {\n    method: \"POST\",\n    url: server_url + \"/v1/orders\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    json: body\n  };\n  request(options, (error, response, body) => {\n    if (error) throw new Error(error);\n    console.log(body);\n  }); // const BASE_URL = \"https://learn.codeit.kr/api/foods\";\n  // const response = await fetch(`${BASE_URL}`, {\n  //   method: \"POST\",\n  //   body: formData,\n  // })\n  //   .then((response) => response.json())\n  //   .then((response) => console.log(response))\n  //   .catch((err) => console.error(err));\n  // if (!response.ok) {\n  //   throw new Error(\"데이터를 생성하는데 실패했습니다\");\n  // }\n  // const body = await response.json();\n  // console.log(body);\n  // return body;\n}\nexport async function ChartDraw() {\n  const options = {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\"\n    }\n  };\n  fetch(\"https://api.upbit.com/v1/candles/minutes/1?market=KRW-BTC&count=1\", options).then(response => response.json()).then(response => console.log(response)).catch(err => console.error(err));\n}\n_c = ChartDraw;\n\nconst useInterval = (callback, delay) => {\n  _s();\n\n  const savedCallback = useRef(null);\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    const executeCallback = () => {\n      savedCallback.current();\n    };\n\n    const timerId = setInterval(executeCallback, delay);\n    return () => clearInterval(timerId);\n  }, []);\n};\n\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\n\nexport default useInterval;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartDraw\");","map":{"version":3,"names":["useEffect","useRef","useState","test","formData","options","method","headers","Accept","console","log","body","response","fetch","then","json","catch","err","error","startTrading","request","require","uuidv4","crypto","sign","queryEncode","encode","access_key","secret_key","server_url","market","side","volume","ord_type","query","hash","createHash","queryHash","update","digest","payload","nonce","query_hash","query_hash_alg","token","url","Authorization","Error","ChartDraw","useInterval","callback","delay","savedCallback","current","executeCallback","timerId","setInterval","clearInterval"],"sources":["/Users/ys/Documents/grid-trading/src/api.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nexport async function test(formData) {\n  const options = { method: \"GET\", headers: { Accept: \"application/json\" } };\n  console.log(\"api뭐야\");\n  let body;\n  const response = await fetch(\n    \"https://api.upbit.com/v1/candles/minutes/1?market=KRW-BTC&count=1\",\n    options\n  )\n    .then((response) => response.json())\n    .catch((err) => console.error(err));\n\n  // console.log(body);\n  // const body = await response.json();\n  return body;\n}\n\nexport async function startTrading(formData) {\n  console.log(\"테스트트레이딩\");\n  // const BASE_URL = \"\";\n  const request = require(\"request\");\n  const uuidv4 = require(\"uuid/v4\");\n  const crypto = require(\"crypto\");\n  const sign = require(\"jsonwebtoken\").sign;\n  const queryEncode = require(\"querystring\").encode;\n\n  const access_key = formData.access_key;\n  const secret_key = formData.secret_key;\n  const server_url = \"https://api.upbit.com/v1/orders\";\n\n  const body = {\n    market: \"KRW-BTC\",\n    side: \"ask\",\n    volume: \"0.00072585\",\n    //price: '',\n    ord_type: \"market\",\n  };\n\n  const query = queryEncode(formData);\n\n  const hash = crypto.createHash(\"sha512\");\n  const queryHash = hash.update(query, \"utf-8\").digest(\"hex\");\n\n  const payload = {\n    access_key: access_key,\n    nonce: uuidv4(),\n    query_hash: queryHash,\n    query_hash_alg: \"SHA512\",\n  };\n\n  const token = sign(payload, secret_key);\n\n  const options = {\n    method: \"POST\",\n    url: server_url + \"/v1/orders\",\n    headers: { Authorization: `Bearer ${token}` },\n    json: body,\n  };\n\n  request(options, (error, response, body) => {\n    if (error) throw new Error(error);\n    console.log(body);\n  });\n\n  // const BASE_URL = \"https://learn.codeit.kr/api/foods\";\n  // const response = await fetch(`${BASE_URL}`, {\n  //   method: \"POST\",\n  //   body: formData,\n  // })\n  //   .then((response) => response.json())\n  //   .then((response) => console.log(response))\n  //   .catch((err) => console.error(err));\n  // if (!response.ok) {\n  //   throw new Error(\"데이터를 생성하는데 실패했습니다\");\n  // }\n  // const body = await response.json();\n  // console.log(body);\n  // return body;\n}\n\nexport async function ChartDraw() {\n  const options = { method: \"GET\", headers: { Accept: \"application/json\" } };\n\n  fetch(\n    \"https://api.upbit.com/v1/candles/minutes/1?market=KRW-BTC&count=1\",\n    options\n  )\n    .then((response) => response.json())\n    .then((response) => console.log(response))\n    .catch((err) => console.error(err));\n}\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef(null);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    const executeCallback = () => {\n      savedCallback.current();\n    };\n\n    const timerId = setInterval(executeCallback, delay);\n\n    return () => clearInterval(timerId);\n  }, []);\n};\n\nexport default useInterval;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}