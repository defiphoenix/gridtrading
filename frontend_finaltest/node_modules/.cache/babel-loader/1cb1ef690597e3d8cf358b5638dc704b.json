{"ast":null,"code":"var _jsxFileName = \"/Users/ys/Documents/grid-trading/src/WaitBuyBox.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useTable } from \"react-table\";\nimport \"./ResultBoxes.css\";\nimport reactTable from \"react-table\";\nimport useInterval from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_VALUES = [{\n  timeStamp: \"2018-04-17T19:16:00\",\n  volume: 10,\n  price: 20\n}, {\n  timeStamp: \"2018-04-18T19:16:00\",\n  volume: 90,\n  price: 100\n}];\nconst COLUMN_DATA = [{\n  accessor: \"timeStamp\",\n  Header: \"timeStamp\"\n}, {\n  accessor: \"volume\",\n  Header: \"volume\"\n}, {\n  accessor: \"price\",\n  Header: \"price\"\n}];\nconst UPDATE_DATA = [{\n  timeStamp: \"2018-04-17T19:16:00\",\n  volume: 11111,\n  price: 111111\n}];\n\nfunction WaitBuyBox(_ref) {\n  _s();\n\n  let {\n    initialValues = INITIAL_VALUES,\n    columnData = COLUMN_DATA,\n    updateData = UPDATE_DATA\n  } = _ref;\n  const [updateTest, setUpdateTest] = useState(updateData);\n  const columns = useMemo(() => columnData, []);\n  const [data, setData] = useState(initialValues);\n  const dataTest = useMemo(() => data, []);\n  const [info, setInfo] = useState();\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data: dataTest\n  });\n\n  const asyncTest = async () => {\n    const options = {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\"\n      }\n    };\n    fetch(\"https://api.upbit.com/v1/candles/minutes/1?market=KRW-BTC&count=1\", options).then(response => response.json()).then(result => {\n      console.log(result);\n      setUpdateTest(result);\n    }).catch(err => console.error(err));\n    console.log(updateTest);\n  };\n\n  useEffect(() => {\n    asyncTest();\n  }, []);\n  useInterval(() => {\n    //const selectedTagIdParam = updateData.map(({ id }) => id).join(\",\");\n    asyncTest();\n  }, 1000); // useEffect(() => {\n  // }, [updateTest]);\n  // const getWaitBuy = () => {\n  //   dataTest.getWaitBuy().then(item => setInfo(item))\n  // }\n  // const dataTest = useMemo(() => info, [info])\n\n  console.log(rows);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ResultBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"ResultBox-heading\",\n      children: \"\\uBBF8\\uCCB4\\uACB0(Buy)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"BuyTable\",\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: [\" \", column.render(\"Header\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WaitBuyBox, \"s3fuuNj1FKZnOnPQORPFEbwaoq8=\", false, function () {\n  return [useTable, useInterval];\n});\n\n_c = WaitBuyBox;\nexport default WaitBuyBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"WaitBuyBox\");","map":{"version":3,"names":["useEffect","useMemo","useState","useTable","reactTable","useInterval","INITIAL_VALUES","timeStamp","volume","price","COLUMN_DATA","accessor","Header","UPDATE_DATA","WaitBuyBox","initialValues","columnData","updateData","updateTest","setUpdateTest","columns","data","setData","dataTest","info","setInfo","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","asyncTest","options","method","headers","Accept","fetch","then","response","json","result","console","log","catch","err","error","map","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"sources":["/Users/ys/Documents/grid-trading/src/WaitBuyBox.js"],"sourcesContent":["import { useEffect, useMemo, useState } from \"react\";\nimport { useTable } from \"react-table\";\nimport \"./ResultBoxes.css\";\nimport reactTable from \"react-table\";\nimport useInterval from \"./api\";\n\nconst INITIAL_VALUES = [\n  {\n    timeStamp: \"2018-04-17T19:16:00\",\n    volume: 10,\n    price: 20,\n  },\n  {\n    timeStamp: \"2018-04-18T19:16:00\",\n    volume: 90,\n    price: 100,\n  },\n];\n\nconst COLUMN_DATA = [\n  {\n    accessor: \"timeStamp\",\n    Header: \"timeStamp\",\n  },\n  {\n    accessor: \"volume\",\n    Header: \"volume\",\n  },\n  {\n    accessor: \"price\",\n    Header: \"price\",\n  },\n];\n\nconst UPDATE_DATA = [\n  {\n    timeStamp: \"2018-04-17T19:16:00\",\n    volume: 11111,\n    price: 111111,\n  },\n];\n\nfunction WaitBuyBox({\n  initialValues = INITIAL_VALUES,\n  columnData = COLUMN_DATA,\n  updateData = UPDATE_DATA,\n}) {\n  const [updateTest, setUpdateTest] = useState(updateData);\n\n  const columns = useMemo(() => columnData, []);\n  const [data, setData] = useState(initialValues);\n  const dataTest = useMemo(() => data, []);\n\n  const [info, setInfo] = useState();\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data: dataTest });\n\n  const asyncTest = async () => {\n    const options = { method: \"GET\", headers: { Accept: \"application/json\" } };\n    fetch(\n      \"https://api.upbit.com/v1/candles/minutes/1?market=KRW-BTC&count=1\",\n      options\n    )\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(result);\n        setUpdateTest(result);\n      })\n      .catch((err) => console.error(err));\n    console.log(updateTest);\n  };\n\n  useEffect(() => {\n    asyncTest();\n  }, []);\n\n  useInterval(() => {\n    //const selectedTagIdParam = updateData.map(({ id }) => id).join(\",\");\n    asyncTest();\n  }, 1000);\n\n  // useEffect(() => {\n\n  // }, [updateTest]);\n\n  // const getWaitBuy = () => {\n  //   dataTest.getWaitBuy().then(item => setInfo(item))\n  // }\n  // const dataTest = useMemo(() => info, [info])\n  console.log(rows);\n  return (\n    <div className=\"ResultBox\">\n      <h1 className=\"ResultBox-heading\">미체결(Buy)</h1>\n\n      <table className=\"BuyTable\" {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}> {column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default WaitBuyBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}