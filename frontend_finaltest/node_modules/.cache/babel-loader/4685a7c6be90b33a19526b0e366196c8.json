{"ast":null,"code":"var _jsxFileName = \"/Users/ys/Documents/grid-trading/src/WaitSellBox.js\",\n    _s = $RefreshSig$();\n\nimport \"./ResultBoxes.css\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useTable } from \"react-table\";\nimport reactTable from \"react-table\";\nimport useInterval from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_VALUES = [{\n  timeStamp: \"2018-04-17T19:16:00\",\n  volume: 10,\n  price: 20\n}, {\n  timeStamp: \"2018-04-18T19:16:00\",\n  volume: 90,\n  price: 100\n}];\nconst COLUMN_DATA = [{\n  accessor: \"timeStamp\",\n  Header: \"timeStamp\"\n}, {\n  accessor: \"volume\",\n  Header: \"volume\"\n}, {\n  accessor: \"price\",\n  Header: \"price\"\n}];\nconst UPDATE_DATA = [{\n  opening_price: 111111\n}];\n\nfunction WaitSellBox() {\n  _s();\n\n  let initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_VALUES;\n  let columnData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : COLUMN_DATA;\n  let updateData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : UPDATE_DATA;\n  const [updateTest, setUpdateTest] = useState(updateData);\n\n  const asyncTest = async () => {\n    const options = {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\"\n      }\n    };\n    fetch(\"https://api.upbit.com/v1/candles/minutes/1?market=KRW-BTC&count=1\", options).then(response => response.json()).then(result => {\n      console.log(result);\n      setUpdateTest(result);\n    }).catch(err => console.error(err));\n    console.log(updateTest);\n  };\n\n  useInterval(() => {\n    //const selectedTagIdParam = updateData.map(({ id }) => id).join(\",\");\n    asyncTest();\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ResultBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"ResultBox-heading\",\n      children: \"\\uBBF8\\uCCB4\\uACB0(Sell)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: updateTest.opening_price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WaitSellBox, \"VHafpQ03Q6p/koC7poHbZ47Q8HY=\", false, function () {\n  return [useInterval];\n});\n\n_c = WaitSellBox;\nexport default WaitSellBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"WaitSellBox\");","map":{"version":3,"names":["useEffect","useMemo","useState","useTable","reactTable","useInterval","INITIAL_VALUES","timeStamp","volume","price","COLUMN_DATA","accessor","Header","UPDATE_DATA","opening_price","WaitSellBox","initialValues","columnData","updateData","updateTest","setUpdateTest","asyncTest","options","method","headers","Accept","fetch","then","response","json","result","console","log","catch","err","error"],"sources":["/Users/ys/Documents/grid-trading/src/WaitSellBox.js"],"sourcesContent":["import \"./ResultBoxes.css\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useTable } from \"react-table\";\nimport reactTable from \"react-table\";\nimport useInterval from \"./api\";\n\nconst INITIAL_VALUES = [\n  {\n    timeStamp: \"2018-04-17T19:16:00\",\n    volume: 10,\n    price: 20,\n  },\n  {\n    timeStamp: \"2018-04-18T19:16:00\",\n    volume: 90,\n    price: 100,\n  },\n];\n\nconst COLUMN_DATA = [\n  {\n    accessor: \"timeStamp\",\n    Header: \"timeStamp\",\n  },\n  {\n    accessor: \"volume\",\n    Header: \"volume\",\n  },\n  {\n    accessor: \"price\",\n    Header: \"price\",\n  },\n];\n\nconst UPDATE_DATA = [\n  {\n    opening_price: 111111,\n  },\n];\n\nfunction WaitSellBox(\n  initialValues = INITIAL_VALUES,\n  columnData = COLUMN_DATA,\n  updateData = UPDATE_DATA\n) {\n  const [updateTest, setUpdateTest] = useState(updateData);\n\n  const asyncTest = async () => {\n    const options = { method: \"GET\", headers: { Accept: \"application/json\" } };\n    fetch(\n      \"https://api.upbit.com/v1/candles/minutes/1?market=KRW-BTC&count=1\",\n      options\n    )\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(result);\n        setUpdateTest(result);\n      })\n      .catch((err) => console.error(err));\n    console.log(updateTest);\n  };\n\n  useInterval(() => {\n    //const selectedTagIdParam = updateData.map(({ id }) => id).join(\",\");\n    asyncTest();\n  }, 1000);\n\n  return (\n    <div className=\"ResultBox\">\n      <h1 className=\"ResultBox-heading\">미체결(Sell)</h1>\n      <p>{updateTest.opening_price}</p>\n    </div>\n  );\n}\n\nexport default WaitSellBox;\n"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,WAAP,MAAwB,OAAxB;;AAEA,MAAMC,cAAc,GAAG,CACrB;EACEC,SAAS,EAAE,qBADb;EAEEC,MAAM,EAAE,EAFV;EAGEC,KAAK,EAAE;AAHT,CADqB,EAMrB;EACEF,SAAS,EAAE,qBADb;EAEEC,MAAM,EAAE,EAFV;EAGEC,KAAK,EAAE;AAHT,CANqB,CAAvB;AAaA,MAAMC,WAAW,GAAG,CAClB;EACEC,QAAQ,EAAE,WADZ;EAEEC,MAAM,EAAE;AAFV,CADkB,EAKlB;EACED,QAAQ,EAAE,QADZ;EAEEC,MAAM,EAAE;AAFV,CALkB,EASlB;EACED,QAAQ,EAAE,OADZ;EAEEC,MAAM,EAAE;AAFV,CATkB,CAApB;AAeA,MAAMC,WAAW,GAAG,CAClB;EACEC,aAAa,EAAE;AADjB,CADkB,CAApB;;AAMA,SAASC,WAAT,GAIE;EAAA;;EAAA,IAHAC,aAGA,uEAHgBV,cAGhB;EAAA,IAFAW,UAEA,uEAFaP,WAEb;EAAA,IADAQ,UACA,uEADaL,WACb;EACA,MAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAACgB,UAAD,CAA5C;;EAEA,MAAMG,SAAS,GAAG,YAAY;IAC5B,MAAMC,OAAO,GAAG;MAAEC,MAAM,EAAE,KAAV;MAAiBC,OAAO,EAAE;QAAEC,MAAM,EAAE;MAAV;IAA1B,CAAhB;IACAC,KAAK,CACH,mEADG,EAEHJ,OAFG,CAAL,CAIGK,IAJH,CAISC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAJtB,EAKGF,IALH,CAKSG,MAAD,IAAY;MAChBC,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACAV,aAAa,CAACU,MAAD,CAAb;IACD,CARH,EASGG,KATH,CASUC,GAAD,IAASH,OAAO,CAACI,KAAR,CAAcD,GAAd,CATlB;IAUAH,OAAO,CAACC,GAAR,CAAYb,UAAZ;EACD,CAbD;;EAeAd,WAAW,CAAC,MAAM;IAChB;IACAgB,SAAS;EACV,CAHU,EAGR,IAHQ,CAAX;EAKA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE;MAAI,SAAS,EAAC,mBAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAIF,UAAU,CAACL;IAAf;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAjCQC,W;UAsBPV,W;;;KAtBOU,W;AAmCT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}