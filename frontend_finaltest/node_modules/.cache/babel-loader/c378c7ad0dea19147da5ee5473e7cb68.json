{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nexport async function test(formData) {\n  const options = {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\"\n    }\n  };\n  console.log(\"api뭐야\");\n  let body;\n  const response = await fetch(\"https://api.upbit.com/v1/candles/minutes/1?market=KRW-BTC&count=1\", options).then(response => response.json()).catch(err => console.error(err)); // console.log(body);\n  // const body = await response.json();\n\n  return body;\n}\nexport async function startTrading(formData) {\n  const options = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      market: \"KRW-BTC\",\n      side: \"ask\",\n      volume: \"0.00072585\",\n      price: \"30000000\",\n      ord_type: \"limit\"\n    })\n  };\n  fetch(\"https://api.upbit.com/v1/orders\", options).then(response => response.json()).then(response => console.log(response)).catch(err => console.error(err)); // const BASE_URL = \"https://learn.codeit.kr/api/foods\";\n  // const response = await fetch(`${BASE_URL}`, {\n  //   method: \"POST\",\n  //   body: formData,\n  // })\n  //   .then((response) => response.json())\n  //   .then((response) => console.log(response))\n  //   .catch((err) => console.error(err));\n  // if (!response.ok) {\n  //   throw new Error(\"데이터를 생성하는데 실패했습니다\");\n  // }\n  // const body = await response.json();\n  // console.log(body);\n  // return body;\n}\nexport async function ChartDraw() {\n  const options = {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\"\n    }\n  };\n  fetch(\"https://api.upbit.com/v1/candles/minutes/1?market=KRW-BTC&count=1\", options).then(response => response.json()).then(response => console.log(response)).catch(err => console.error(err));\n}\n_c = ChartDraw;\n\nconst useInterval = (callback, delay) => {\n  _s();\n\n  const savedCallback = useRef(null);\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    const executeCallback = () => {\n      savedCallback.current();\n    };\n\n    const timerId = setInterval(executeCallback, delay);\n    return () => clearInterval(timerId);\n  }, []);\n};\n\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\n\nexport default useInterval;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartDraw\");","map":{"version":3,"names":["useEffect","useRef","useState","test","formData","options","method","headers","Accept","console","log","body","response","fetch","then","json","catch","err","error","startTrading","JSON","stringify","market","side","volume","price","ord_type","ChartDraw","useInterval","callback","delay","savedCallback","current","executeCallback","timerId","setInterval","clearInterval"],"sources":["/Users/ys/Documents/grid-trading/src/api.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nexport async function test(formData) {\n  const options = { method: \"GET\", headers: { Accept: \"application/json\" } };\n  console.log(\"api뭐야\");\n  let body;\n  const response = await fetch(\n    \"https://api.upbit.com/v1/candles/minutes/1?market=KRW-BTC&count=1\",\n    options\n  )\n    .then((response) => response.json())\n    .catch((err) => console.error(err));\n\n  // console.log(body);\n  // const body = await response.json();\n  return body;\n}\n\nexport async function startTrading(formData) {\n  const options = {\n    method: \"POST\",\n    headers: { Accept: \"application/json\", \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      market: \"KRW-BTC\",\n      side: \"ask\",\n      volume: \"0.00072585\",\n      price: \"30000000\",\n      ord_type: \"limit\",\n    }),\n  };\n\n  fetch(\"https://api.upbit.com/v1/orders\", options)\n    .then((response) => response.json())\n    .then((response) => console.log(response))\n    .catch((err) => console.error(err));\n\n  // const BASE_URL = \"https://learn.codeit.kr/api/foods\";\n  // const response = await fetch(`${BASE_URL}`, {\n  //   method: \"POST\",\n  //   body: formData,\n  // })\n  //   .then((response) => response.json())\n  //   .then((response) => console.log(response))\n  //   .catch((err) => console.error(err));\n  // if (!response.ok) {\n  //   throw new Error(\"데이터를 생성하는데 실패했습니다\");\n  // }\n  // const body = await response.json();\n  // console.log(body);\n  // return body;\n}\n\nexport async function ChartDraw() {\n  const options = { method: \"GET\", headers: { Accept: \"application/json\" } };\n\n  fetch(\n    \"https://api.upbit.com/v1/candles/minutes/1?market=KRW-BTC&count=1\",\n    options\n  )\n    .then((response) => response.json())\n    .then((response) => console.log(response))\n    .catch((err) => console.error(err));\n}\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef(null);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    const executeCallback = () => {\n      savedCallback.current();\n    };\n\n    const timerId = setInterval(executeCallback, delay);\n\n    return () => clearInterval(timerId);\n  }, []);\n};\n\nexport default useInterval;\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,OAAO,eAAeC,IAAf,CAAoBC,QAApB,EAA8B;EACnC,MAAMC,OAAO,GAAG;IAAEC,MAAM,EAAE,KAAV;IAAiBC,OAAO,EAAE;MAAEC,MAAM,EAAE;IAAV;EAA1B,CAAhB;EACAC,OAAO,CAACC,GAAR,CAAY,OAAZ;EACA,IAAIC,IAAJ;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mEAD0B,EAE1BR,OAF0B,CAAL,CAIpBS,IAJoB,CAIdF,QAAD,IAAcA,QAAQ,CAACG,IAAT,EAJC,EAKpBC,KALoB,CAKbC,GAAD,IAASR,OAAO,CAACS,KAAR,CAAcD,GAAd,CALK,CAAvB,CAJmC,CAWnC;EACA;;EACA,OAAON,IAAP;AACD;AAED,OAAO,eAAeQ,YAAf,CAA4Bf,QAA5B,EAAsC;EAC3C,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,MADM;IAEdC,OAAO,EAAE;MAAEC,MAAM,EAAE,kBAAV;MAA8B,gBAAgB;IAA9C,CAFK;IAGdG,IAAI,EAAES,IAAI,CAACC,SAAL,CAAe;MACnBC,MAAM,EAAE,SADW;MAEnBC,IAAI,EAAE,KAFa;MAGnBC,MAAM,EAAE,YAHW;MAInBC,KAAK,EAAE,UAJY;MAKnBC,QAAQ,EAAE;IALS,CAAf;EAHQ,CAAhB;EAYAb,KAAK,CAAC,iCAAD,EAAoCR,OAApC,CAAL,CACGS,IADH,CACSF,QAAD,IAAcA,QAAQ,CAACG,IAAT,EADtB,EAEGD,IAFH,CAESF,QAAD,IAAcH,OAAO,CAACC,GAAR,CAAYE,QAAZ,CAFtB,EAGGI,KAHH,CAGUC,GAAD,IAASR,OAAO,CAACS,KAAR,CAAcD,GAAd,CAHlB,EAb2C,CAkB3C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACD;AAED,OAAO,eAAeU,SAAf,GAA2B;EAChC,MAAMtB,OAAO,GAAG;IAAEC,MAAM,EAAE,KAAV;IAAiBC,OAAO,EAAE;MAAEC,MAAM,EAAE;IAAV;EAA1B,CAAhB;EAEAK,KAAK,CACH,mEADG,EAEHR,OAFG,CAAL,CAIGS,IAJH,CAISF,QAAD,IAAcA,QAAQ,CAACG,IAAT,EAJtB,EAKGD,IALH,CAKSF,QAAD,IAAcH,OAAO,CAACC,GAAR,CAAYE,QAAZ,CALtB,EAMGI,KANH,CAMUC,GAAD,IAASR,OAAO,CAACS,KAAR,CAAcD,GAAd,CANlB;AAOD;KAVqBU,S;;AAYtB,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;EAAA;;EACvC,MAAMC,aAAa,GAAG9B,MAAM,CAAC,IAAD,CAA5B;EAEAD,SAAS,CAAC,MAAM;IACd+B,aAAa,CAACC,OAAd,GAAwBH,QAAxB;EACD,CAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;EAIA7B,SAAS,CAAC,MAAM;IACd,MAAMiC,eAAe,GAAG,MAAM;MAC5BF,aAAa,CAACC,OAAd;IACD,CAFD;;IAIA,MAAME,OAAO,GAAGC,WAAW,CAACF,eAAD,EAAkBH,KAAlB,CAA3B;IAEA,OAAO,MAAMM,aAAa,CAACF,OAAD,CAA1B;EACD,CARQ,EAQN,EARM,CAAT;AASD,CAhBD;;GAAMN,W;;AAkBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}